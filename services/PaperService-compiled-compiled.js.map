{"version":3,"sources":["PaperService-compiled.js"],"names":[],"mappings":"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","file":"PaperService-compiled-compiled.js","sourcesContent":["\"use strict\";\n\nvar pList = require('./jsonDB/paperList2.json');\nvar _ = require('underscore');\n\nmodule.exports = function (app) {\n\n    var DB = _.toArray(pList.db);\n    var MAX_RECORDS = DB.length;\n\n    //get papers by id\n    var getPaperById = function getPaperById(id) {\n        return pList.db[id];\n    };\n\n    var buildResponse = function buildResponse(payload, isError, code, msg) {\n        var resp = { results: null, metadata: { count: 0, error: isError, statusCode: code, message: msg } };\n        var res = payload;\n        if (!_.isArguments(res)) res = _.toArray(payload);\n        var count = res.length;\n        resp.results = res;\n        resp.metadata.count = count;\n        return resp;\n    };\n\n    app.get('/publications', function (req, res, next) {\n        req.url = '/publications/';\n        next();\n    });\n    app.get('/publications/all', function (req, res, next) {\n        req.url = '/publications/';\n        next();\n    });\n\n    app.get('/publications/:id', function (req, res) {\n        //simulate an expensive call --getPaperById using a promise\n        var dbCall = new Promise(function (fOk, fFail) {\n            var result = getPaperById(req.params.id);\n\n            if (result) fOk(result);else fFail(\"Paper with ID of \" + req.params.id + \"  was not found\");\n        });\n\n        dbCall.then(function (data) {\n            res.json(buildResponse([data], false, 200, \"OK\"));\n        })['catch'](function (errMsg) {\n            res.status(404);\n            res.json(buildResponse([], true, 404, errMsg));\n        });\n    });\n\n    //Get all of the papers\n\n    app.get('/publications/', function (req, res) {\n\n        var l = req.query.limit;\n        var o = req.query.offset;\n\n        if (l == null && o == null) {\n\n            //simple syn version below\n            //var resp = buildResponse(DB,false,200,\"OK\");\n            //res.json(resp);\n\n            var call = new Promise(function (fOk, fFail) {\n                fOk(buildResponse(DB, false, 200, \"OK\"));\n            }).then(function (returnData) {\n                return res.json(returnData);\n            })['catch'](function (error) {\n                res.json(buildResponse([], true, 400, \"An unknonwn error has happened \" + error));\n            });\n        } else if (l == null || o == null) res.json(buildResponse([], true, 400, \"Both the limit and offset variables are required if one is used\"));else {\n            (function () {\n\n                var li = parseInt(l);\n                var oi = parseInt(o);\n\n                if (oi > MAX_RECORDS || oi < 1) res.json(buildResponse([], true, 400, \"Offset variable is out of range \"));else if (li < 0) res.json(buildResponse([], true, 400, \"Limit must be positive\"));else {\n                    //finally all parameters are OK, build the response structure and return it\n                    //start position is o-1, end is o+l\n\n                    //let RspList = DB.slice(oi-1,oi-1+li)\n                    //res.json(buildResponse(RspList,false,200,\"OK\"));\n\n                    var call = new Promise(function (fOk, fFail) {\n                        fOk(DB.slice(oi - 1, oi - 1 + li));\n                    }).then(function (returnArray) {\n                        res.json(res.json(buildResponse(returnArray, false, 200, \"OK\")));\n                    })['catch'](function (error) {\n                        res.json(buildResponse([], true, 400, \"An unknonwn error has happened \" + error));\n                    });\n                }\n            })();\n        }\n    });\n};\n\n//# sourceMappingURL=PaperService-compiled.js.map"]}